#+TITLE: Forecasting


* UANL
 #+Name forecasting_uanl
 #+BEGIN_SRC python :session data :results replace drawer output :exports both :tangle uanl_forecasting.py :noweb yes :eval never-export

import matplotlib.pyplot as plt
import statsmodels.api as sm
import numbers
import pandas as pd
from tabulate import tabulate
from statsmodels.stats.outliers_influence import summary_table
from typing import Tuple, Dict
import numpy as np


def print_tabulate(df: pd.DataFrame):
    print(tabulate(df, headers=df.columns, tablefmt="orgtbl"))

def transform_variable(df: pd.DataFrame, x:str)->pd.Series:
    if isinstance(df[x][0], numbers.Number):
        return df[x] # type: pd.Series
    else:
        return pd.Series([i for i in range(0, len(df[x]))])

def linear_regression(df: pd.DataFrame, x:str, y: str)->Dict[str, float]:
    fixed_x = transform_variable(df, x)
    model= sm.OLS(df[y],sm.add_constant(fixed_x)).fit()
    bands = pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0]
    print_tabulate(pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0])
    coef = pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0]['coef']
    r_2_t = pd.read_html(model.summary().tables[0].as_html(),header=None,index_col=None)[0]
    return {'m': coef.values[1], 'b': coef.values[0], 'r2': r_2_t.values[0][3], 'r2_adj': r_2_t.values[1][3], 'low_band': bands['[0.025'][0], 'hi_band': bands['0.975]'][0]}

def plt_lr(df: pd.DataFrame, x:str, y: str, m: float, b: float, r2: float, r2_adj: float, low_band: float, hi_band: float, colors: Tuple[str,str]):
    fixed_x = transform_variable(df, x)
    df.plot(x=x,y=y, kind='scatter')
    plt.plot(df[x],[ m * x + b for _, x in fixed_x.items()], color=colors[0])
    plt.fill_between(df[x],
                     [ m * x  + low_band for _, x in fixed_x.items()],
                     [ m * x + hi_band for _, x in fixed_x.items()], alpha=0.2, color=colors[1])





df = pd.read_csv("csv/typed_uanl.csv") # type: pd.DataFrame
#print_tabulate(df.head(50))
df_by_sal = df.groupby("Fecha")\
              .aggregate(sueldo_mensual=pd.NamedAgg(column="Sueldo Neto", aggfunc=pd.DataFrame.mean))
df_by_sal.reset_index(inplace=True)
# df_by_sal["sueldo_mensual"] = df_by_sal["sueldo_mensual"]**10
#print_tabulate(df_by_sal.head(5))
a = linear_regression(df_by_sal, "Fecha", "sueldo_mensual")
plt_lr(df=df_by_sal, x="Fecha", y="sueldo_mensual", colors=('red', 'orange'), **a)

plt.xticks(rotation=90)
plt.savefig('img/lr_sueldo_mensual_Fecha_m.png')
plt.close()

 #+END_SRC

 #+RESULTS:
 :results:
 |       |    coef | std err |      t | P> |      t |         | [0.025 | 0.975] |
 |-------+---------+---------+--------+----+--------+---------+--------+--------|
 | const |   10800 |  555.67 | 19.444 |  0 | 9652.1 |   12000 |        |        |
 |     0 | 175.686 |  41.398 |  4.244 |  0 | 89.832 | 261.541 |        |        |
 :end:


[[file:img/lr_sueldo_mensual_Fecha_m.png]]
* forecasting
 #+Name forecasting
 #+BEGIN_SRC python :session data :results replace drawer output :exports both :tangle uanl_forecasting.py :noweb yes :eval never-export

import matplotlib.pyplot as plt
import statsmodels.api as sm
import numbers
import pandas as pd
from tabulate import tabulate
from statsmodels.stats.outliers_influence import summary_table
from typing import Tuple, Dict
import numpy as np


def print_tabulate(df: pd.DataFrame):
    print(tabulate(df, headers=df.columns, tablefmt="orgtbl"))

def transform_variable(df: pd.DataFrame, x:str)->pd.Series:
    if isinstance(df[x][df.index[0]], numbers.Number):
        return df[x] # type: pd.Series
    else:
        return pd.Series([i for i in range(0, len(df[x]))])

def linear_regression(df: pd.DataFrame, x:str, y: str)->Dict[str, float]:
    fixed_x = transform_variable(df, x)
    model= sm.OLS(list(df[y]),sm.add_constant(fixed_x)).fit()
    bands = pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0]
    #print_tabulate(pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0])
    coef = pd.read_html(model.summary().tables[1].as_html(),header=0,index_col=0)[0]['coef']
    r_2_t = pd.read_html(model.summary().tables[0].as_html(),header=None,index_col=None)[0]
    return {'m': coef.values[1], 'b': coef.values[0], 'r2': r_2_t.values[0][3], 'r2_adj': r_2_t.values[1][3], 'low_band': bands['[0.025'][0], 'hi_band': bands['0.975]'][0]}

def plt_lr(df: pd.DataFrame, x:str, y: str, m: float, b: float, r2: float, r2_adj: float, low_band: float, hi_band: float, colors: Tuple[str,str]):
    fixed_x = transform_variable(df, x)
    plt.plot(df[x],[ m * x + b for _, x in fixed_x.items()], color=colors[0])
    plt.fill_between(df[x],
                     [ m * x  + low_band for _, x in fixed_x.items()],
                     [ m * x + hi_band for _, x in fixed_x.items()], alpha=0.2, color=colors[1])


def normalize_distribution(dist: np.array, n: int)->np.array:
    b = dist - min(dist) + 0.000001
    c = (b / np.sum(b)) * n
    return np.round(c)

# begin_date = '2016-01-01'
# end_date = '2023-01-01'
# date_range = pd.date_range(start=begin_date, end=end_date, freq='1D')
# norm_dist = np.random.standard_normal(len(date_range))
# sales = normalize_distribution(norm_dist, 100*len(date_range))
# df = pd.DataFrame({'Fecha': date_range, 'ventas': sales}) # type: pd.DataFrame
# df.to_csv('csv/sales.csv', index=False)

full_df = pd.read_csv('csv/sales.csv')
print(f"full -> mean: {np.mean(full_df['ventas'])}, sd: {np.std(full_df['ventas'])}")
df = full_df.tail(50)
x = "Fecha"
y= "ventas"
# full_df.plot(x=x,y=y, kind='scatter')
# plt.xticks(rotation=90)
# plt.savefig('img/full_ventas_Fecha_m.png')
# plt.close()

df.plot(x=x,y=y, kind='scatter')
a = linear_regression(df, x,y)
plt_lr(df=df, x=x, y=y, colors=('red', 'orange'), **a)
a = linear_regression(df.tail(5), x,y)
plt_lr(df=df.tail(5), x=x, y=y, colors=('red', 'orange'), **a)
df_j = df[pd.to_datetime(df[x]).dt.dayofweek == 4]
print_tabulate(df_j)
a = linear_regression(df_j, x,y)
plt_lr(df=df_j, x=x, y=y, colors=('blue', 'blue'), **a)
#
plt.xticks(rotation=90)
plt.savefig('img/lr_ventas_Fecha_m.png')
plt.close()
df2 = full_df.loc[(pd.to_datetime(full_df[x])>='2019-11-11') & (pd.to_datetime(full_df[x]) < '2020-01-02')]
dfs = [
    ('50D', df),
    ('10D', df.tail(10)),
    ('5D', df.tail(5)),
    ('jueves', df[pd.to_datetime(df[x]).dt.dayofweek == 1]),
    ('50D-1Y', df2),
    ('10D-Y', df2.tail(10)),
    ('5D-Y', df2.tail(5)),
    ('jueves-Y', df2[pd.to_datetime(df2[x]).dt.dayofweek == 1]),
]
lrs = [(title, linear_regression(_df,x=x,y=y), len(_df)) for title, _df in dfs]
lrs_p = [(title, lr_dict["m"]*size  + lr_dict["b"], lr_dict) for title, lr_dict, size in lrs]
print(lrs_p)


 #+END_SRC

 #+RESULTS:
 :results:
 full -> mean: 99.9917904612979, sd: 32.48812152926464
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 |      | Fecha      |   ventas |
 |------+------------+----------|
 | 2513 | 2022-11-18 |       86 |
 | 2520 | 2022-11-25 |       64 |
 | 2527 | 2022-12-02 |       91 |
 | 2534 | 2022-12-09 |      125 |
 | 2541 | 2022-12-16 |       80 |
 | 2548 | 2022-12-23 |      118 |
 | 2555 | 2022-12-30 |       58 |
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 7 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=10
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/statsmodels/stats/stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 5 samples were given.
   warn("omni_normtest is not valid with less than 8 observations; %i "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=8
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=8
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 /var/home/jhernandez/.local/lib/python3.10/site-packages/scipy/stats/_stats_py.py:1477: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=8
   warnings.warn("kurtosistest only valid for n>=20 ... continuing "
 [('50D', 67.9494, {'m': -0.9236, 'b': 114.1294, 'r2': 0.143, 'r2_adj': 0.125, 'low_band': 95.489, 'hi_band': 132.77}), ('10D', 20.066599999999994, {'m': -7.1697, 'b': 91.7636, 'r2': 0.332, 'r2_adj': 0.249, 'low_band': 47.528, 'hi_band': 135.999}), ('5D', -12.400000000000006, {'m': -18.8, 'b': 81.6, 'r2': 0.683, 'r2_adj': 0.577, 'low_band': 23.97, 'hi_band': 139.23}), ('jueves', 99.85730000000001, {'m': 2.6786, 'b': 81.1071, 'r2': 0.117, 'r2_adj': -0.06, 'low_band': 50.548, 'hi_band': 111.666}), ('50D-1Y', 127.8339, {'m': 0.7579, 'b': 88.4231, 'r2': 0.133, 'r2_adj': 0.116, 'low_band': 72.15, 'hi_band': 104.696}), ('10D-Y', 153.8665, {'m': 4.8121, 'b': 105.7455, 'r2': 0.234, 'r2_adj': 0.138, 'low_band': 67.826, 'hi_band': 143.665}), ('5D-Y', 165.5, {'m': 8.1, 'b': 125.0, 'r2': 0.23, 'r2_adj': -0.027, 'low_band': 58.203, 'hi_band': 191.797}), ('jueves-Y', 147.3568, {'m': 4.1071, 'b': 114.5, 'r2': 0.095, 'r2_adj': -0.056, 'low_band': 61.372, 'hi_band': 167.628})]
 :end:

[[file:img/full_ventas_Fecha_m.png]]

[[file:img/lr_ventas_Fecha_m.png]]
